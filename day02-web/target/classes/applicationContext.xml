<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">


        <!-- IOC和DI的注解扫描 -->
        <context:component-scan base-package="com.ty">
                <!-- 大容器  扫描时  排出 Controller注解 -->
                <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        </context:component-scan>

        <!-- AOP自动代理生成配置-->
        <!-- 打开AOP的注解 -->
        <aop:aspectj-autoproxy></aop:aspectj-autoproxy>


        <!-- 初始化数据源对象；DruidDataSource -->
        <bean id="druiddataSource" class="com.alibaba.druid.pool.DruidDataSource">
                <!-- 与数据库建立连接的基本信息 -->
                <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
                <property name="url"
                          value="jdbc:mysql://localhost:3306/bootstarp01?characterEncoding=utf-8"></property>
                <property name="username" value="root"></property>
                <property name="password" value="123456"></property>
                <!-- 关于数据库连接池的基本信息 -->
                <property name="maxActive" value="50"></property>
                <property name="initialSize" value="5"></property>
                <property name="minIdle" value="1"></property>
                <property name="maxWait" value="60000"></property>
        </bean>

        <!--配置SqlSessionFactory的bean    -->
        <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
                <property name="dataSource" ref="druiddataSource"></property>
                <property name="configLocation" value="classpath:mybatis-config.xml"></property>
         </bean>

        <!--  配置mybatis接口的代理对象bean
        根据指定的包 把mapper找出来，创建对象
        -->
        <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
                <property name="basePackage" value="com.ty.dao"></property>
        </bean>

</beans>